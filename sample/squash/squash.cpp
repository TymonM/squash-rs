// generated by squash on 2025-06-02 13:32:59
// https://github.com/TymonM/squash

/* -- animal.cpp -- */
/* -- animal.h -- */
#ifndef ANIMAL_H
#define ANIMAL_H

#include <iostream>

/* -- food.h -- */
#ifndef FOOD_H
#define FOOD_H

#include <iostream>

class Food {
private:
    std::string name;
    int calories;
public:
    Food(const std::string& name, int calories) : name(name), calories(calories) {}

    std::string getName() const;
    int getCalories() const;
};

std::ostream& operator<<(std::ostream& os, const Food& food);

#endif // FOOD_H
/* -- END OF food.h -- */

class Animal {
private:
    std::string name;
    Food favoriteFood;

public:
    Animal(const std::string& name, const Food& food) : name(name), favoriteFood(food) {}
    std::string getName() const;
    Food getFavoriteFood() const;
};

std::ostream& operator<<(std::ostream& os, const Animal& animal);

#endif // ANIMAL_H
/* -- END OF animal.h -- */

#include <iostream>

std::string Animal::getName() const {
    return name;
}

Food Animal::getFavoriteFood() const {
    return favoriteFood;
}

std::ostream& operator<<(std::ostream& os, const Animal& animal) {
    os << "Animal\n";
    os << "\t Name\n\t\t" << animal.getName() << "\n";
    os << "\t Favorite Food\n\t\t" << animal.getFavoriteFood() << "\n";
    return os;
}
/* -- END OF animal.cpp -- */
/* -- main.cpp -- */
#include <iostream>

/* -- SKIPPING DUPLICATE animal.h -- */
/* -- SKIPPING DUPLICATE food.h -- */
/* -- food.h -- */
#ifndef POORLY_NAMED_H
#define POORLY_NAMED_H

#include <iostream>

class PoorlyNamed {
    public:
    PoorlyNamed(){};
    sayHi() {
        std::cout << "Hello from PoorlyNamed!" << std::endl;
    }
}

#endif // POORLY_NAMED_H
/* -- END OF food.h -- */

int main() {
    std::cout << "Hello, World!" << std::endl;

    Food pizza("Pizza", 200);
    Animal garfield("Garfield", pizza);

    std::cout << garfield << std::endl;

    PoorlyNamed poorlyNamed;
    poorlyNamed.sayHi();

    return 0;
}
/* -- END OF main.cpp -- */
